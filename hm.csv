status,issue,title,validator comment 1,validator comment 2,validator comment 3,root cause 1,root cause 2,root cause 3,merged root cause,primary finding,proposed root cause group,
Satisfactory,validation-387,Problematic handling of token price updates,No way to identify proposals in an unique way may lead to wrong votes,inflated severity,Edge case,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179",validation-167,"DUPE-LockManager-003,DUPE-LockManager-026",
Satisfactory,validation-322,approveUSDPrice/disapproveUSDPrice function param is price rather than proposal id,No way to identify proposals in an unique way may lead to wrong votes.,inflated severity,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L225","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L225,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-167,"DUPE-LockManager-003,DUPE-LockManager-010",
Satisfactory,validation-374,DOS in Price Updates Results in Stale Price Reporting,Price proposals do not have expiration. I would say this is QA.,,Overinflated severity as it implies malfunctioning of price feeds. Worth exploring,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L202-L203,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L202-L203",validation-179,"DUPE-LockManager-003,DUPE-LockManager-026,DUPE-LockManager-026",
Satisfactory,validation-104,Stale Proposal Issue in USD Price Update Proposal Contract,Price proposals do not have expiration. I would say this is QA.,,"Overinflated severity (edge case, but worth checking)",https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L178,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142",validation-167,"DUPE-LockManager-003,DUPE-LockManager-026",
Satisfactory,validation-344,Rebasing rewards will get stuck on the contract forever or users may be unable to withdraw any tokens if rebasing tokens are deposited.,Rebase tokens,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-10,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-589,LockManager does not handle Rebasing tokens properly,Rebase tokens,,Disregarded by sponsor,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-10,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-365,The contract does not support rebasing tokens,Rebase tokens,,"Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-10,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-530,value of lockedToken.remainder is not reduced to zero even when the user has withdrawn all the tokens he locked.,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L433","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L433",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-362,"Incorrect `remainder` calculation on repeated Lock/Unlock allows Munchanble without lock fund (2 for the price of one, or nft by 1 wei fund lock)",Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L434","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L434",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-485,Players can steal funds from the `lockManager` preventing other users form unlocking the full amount of their withdrawals,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L435","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L435",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-364,A malicious user can receive nft for free or at discount,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L438","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L438",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-616,"The unlock method does not reset the 'remainder' variable, allowing NFTs to be minted with less locked funds.",Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L439","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L439",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-173,"When user unlock all tokens, remainder value does not delete",Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L426","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L426",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-192,`lockedToken.remainder` is not subtracted when a user `unlock()` his assets,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L424","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L424",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-554,Missing logic to adjust `lockedToken.remainder` during `unlock` permits acquiring subsequent NFT without locking the required amount.,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L426","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L426",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-498,Remainder not being deleted when unlocking tokens will cause some serious complications.,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L430","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L430",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-252,Incorrect accounting of `remainder` can result in user receiving one extra NFT with discounted price,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L431","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L431",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-241,Users Can Steal Nfts From The Lockdrop Because The Reminder Is Not Correctly Accounted For.,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L432","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L432",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-200,Users `remainder` is not reduced while unlocking tokens,Remainder is not cleared after unlock,,Users can't unlock their remainder tokens,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379-L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-484,User can earn extra nfts than deserved.,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L427","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L427",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-227,A User can mint NFT with significantly less amount of token  cause `remainder` not handeled in `unlock()`,Remainder is not cleared after unlock,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L429","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L429",findings-40,"DUPE-LockManager-004,DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-006",
Satisfactory,validation-358,An attacker can set a user���s `remainder` to 0 when `lockDrop` is over,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L288-L290,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L395,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L288-L290,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L395",validation-355,"DUPE-LockManager-006,DUPE-LockManager-037,DUPE-LockManager-038",
Satisfactory,validation-619,Remainder is reset to 0 when subsequent lock is made outside the Lockdrop Period,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L382,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L382,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-001,DUPE-LockManager-006",
Satisfactory,validation-328,Locking outside of lockdrop periods erase one lock's remainder,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L383,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L383,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-001,DUPE-LockManager-006",
Satisfactory,validation-38,"When a player calls the lock() method outside the lockdrop timeframe, he/she loses the remainder amount",Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L382,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L382,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-001,DUPE-LockManager-006",
Satisfactory,validation-578,`lockedToken.reminder` of a Previous Lock Resets to 0 If User/Attacker Locks Funds Between Two Lockdrop Events,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L391,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L391,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-017",
Satisfactory,validation-525,LockedToken Remainder Tracking will be Emptied and Lost When Block.timestamp is not Within Lock Period Range,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L392,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L392,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-018",
Satisfactory,validation-472,"When `LockManager.lockOnBehalf` is called from `MigrationManager`, the user's `reminder` will be set to 0, resulting in fewer received `MunchableNFTs`",Remainder is reset in lock causing a loss to users,,Remainder is reset if locked during migrations (similar to losing it outside of lockbox periods),https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-035",
Satisfactory,validation-146,User can lose his remainder for future lockdrop events,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L385,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L385,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-019",
Satisfactory,validation-600,lockedToken.remainder is not handled properly during non-LockDrop period,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L386,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L386,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-020",
Satisfactory,validation-563,`lockedToken.remainder` can get corrupted depending on when `lock()` is called,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L387,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L387,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-021",
Satisfactory,validation-588,Remainder can be cleared by attacker or user themselves unintentionally,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L388,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L388,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-022",
Satisfactory,validation-382,Users can miss out on some rewards,Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,validation-482,DUPE-LockManager-006,
Satisfactory,validation-54,"If the user executes the lock function not during the lockdrop period, the retainer may be lost.",Remainder is reset in lock causing a loss to users,,Remainder is reset if locked outside of lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L380,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-025",
Satisfactory,validation-60,"If users migrate NFT, they may lose some of their unopened Munchables.",Remainder is reset in lock causing a loss to users,,Remainder is reset if locked during migrations (similar to losing it outside of lockbox periods),https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-035",
Satisfactory,validation-275,Users locking with a duration of lockdrop days or more do not get minted MUNCH NFTs from remainder accumulation or whole deposits hence cannot earn points or claim MUNCH tokens,Remainder is reset in lock causing a loss to users,intended behaviour imo,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,validation-598,DUPE-LockManager-006,
Satisfactory,validation-329,"If the migrationManager calls lock to an address that has a non-zero remainder, this address will lose its accounted remainder",Remainder is reset in lock causing a loss to users,,Remainder is reset if locked during migrations (similar to losing it outside of lockbox periods),https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-482,"DUPE-LockManager-006,DUPE-LockManager-006,DUPE-LockManager-035",
Satisfactory,validation-197,"Incorrect calculation of the remainder, when the lockdrop hasn't opened, can prevent users from obtaining NFTs in the next lock.",Report is not clear.,,Remainder is reset if locked outside of lockbox period,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L389,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L389,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",validation-598,"DUPE-LockManager-006,DUPE-LockManager-036",
Satisfactory,validation-247,Stalemate Could Happen and No New Proposal Is Able to Be Made,Thresholds deadlocks. I would say this is admin error,,"Overinflated severity (edge case, but worth checking)",https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46",validation-569,"DUPE-LockManager-003,DUPE-LockManager-007",
Satisfactory,validation-28,The PriceFeed can block the update of the price by creating a proposal immediately after the rejection of the previous one.,Trusted roles,,"Overinflated severity (edge case, but worth checking)",,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158",validation-179,"DUPE-LockManager-003,DUPE-LockManager-026",
Satisfactory,validation-493,Use of payable.transfer and inability to specify a recipient will cause tokens to be locked forever if unlocker is a contract or multisig wallet,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,validation-100,DUPE-LockManager-004,
Satisfactory,validation-30,Players ETH token could be locked forever in the contract,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,validation-100,DUPE-LockManager-004,
Satisfactory,validation-555,Incorrect state change in `_lock` function allows user to steal tokens.,Users can drain tokesn by lockind and unlocking at specific times,,"unlock() doesn't subtract remainder, which can be reused to mint at a discount price",https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L380,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L425","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L344-L380,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L416-L425",validation-75,"DUPE-LockManager-004,DUPE-LockManager-006",
Satisfactory,validation-284,Users can lock past the maximum locking duration,Users can lock more than the max allowed.,"no stated impact, state handling -> L",Users can extend lock > max lock (worth checking if intentional),https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L246C9-L247C47,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L265,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L381-L384,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L265,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L246C9-L247C47,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L381-L384",validation-511,"DUPE-LockManager-001,DUPE-LockManager-013,DUPE-LockManager-016",
Satisfactory,validation-385,Users with expired locks who haven't withdrawn their tokens will receive the same benefits as if their tokens are locked,Users still earns rewards after unlock period without unlocking again,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L461-L487,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L371,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L410-L411","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L461-L487,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L371,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L410-L411,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11",findings-50,"DUPE-LockManager-005,DUPE-LockManager-006,DUPE-LockManager-031,DUPE-LockManager-043",
Satisfactory,validation-337,A Price Feed address can vote against and in favor of the same proposal at the same time,Voters can disapprove and then approve due to lack of disapprovals check,valid,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L208","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-111,Missing a check,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L208","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-101,Double Voting Issue in USD Price Update Proposal Contract,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L252","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-503,A single Role.PriceFeed_X can both disapprove and approve the same proposal,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L253","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-558,PriceFeed role can disapprove and able to approve same proposal,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L213","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-211,approveUSDPrice() only checks for prior approve but not for disapprove,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L214","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-136,approveUSDPrice function allows authorized caller to call disapproveUSDPrice function then also call approveUSDPrice function,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L215","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-156,Anyone Can Disapprove and Then Approve,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L215","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-311,"approveUSDPrice function does not check if a user already disapproved a specific price already, leading to a user casting multiple votes on the same price proposal",Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L216","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-459,The approve/disapproveUsdPrice can be functioned unexpectedly,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L217","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-519,Disapprovals are not checked when approving price,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L219","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-82,"A PriceFeed role can disapprove and approve USD price at the same time, which should not be possible",Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L220","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-506,a proposal can be disapproved and then approved again,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L221","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-81,Proposal Approval/Disapproval Inconsistency,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L222","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-245,Users Can Disapprove and Then Approve Proposals,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L223","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-161,Missing check that proposal was not disapproved in the `approveUSDPrice()` function.,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L224","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-330,A price feed can disapprove and approve an USD price simultaneously,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L227","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-491,A User can Approve the proposed Price even though he has disapproved before and no decrement is done for disapprovalCounts.,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L228","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-524,Disapproved Proposal can still be approved,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L232","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-383,An oracle can still approve an USD price after it has already disapproved the price.,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L208","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-276,A Price Feed role can disapprove and approve a price on the same proposal due to a missing check,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L236","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-581,Missing validation for already disapproved proposal in approveUSDPrice function,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L238","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-39,Protocol allows a voter to vote both `for` & `against` the same proposal which not only goes against natural voting logic and would cause for wrong approvals/disapprovals since the `>= DISAPPROVE_THRESHOLD`& `>= APPROVE_THRESHOLD` checks would use inflated data,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L240","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-250,Missing disapproval check in `LockManager.sol::approveUSDPrice` allows simultaneous approval and disapproval of a price proposal,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L241","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-384,A PriceFeed is able to both approve and disapprove usd price,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L243","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-231,"Pricefeed role users should not be allowed to approve prices after disapproving it, this leads to a single role holder filling up both sides of the proposal threshold.",Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L244","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-502,The `approveUSDPrice()` Function Allows a Price Feed Updater to Approve a Proposal After Disapproving It Without Decreasing `disapprovalsCount`,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L245","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-318,"`Pricefeed roles` who disapproved USD price can still approve the same USD price, breaking protocol invariant",Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L246","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-285,Double Approval Vulnerability in Approve and Disapprove Update Mechanism,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L247","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-369,Price Feeds can disapprove and approve the same proposal,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L248","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-269,It is possible for a Role.PriceFeed to both approve and disapprove the same proposal,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L249","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-342,Price Feed Caller can Approve and Disapprove USD Price At The Same Time,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L250","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-27,PriceFeed can vote for disapproval and approval for the same proposal,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L226","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-579,Approval After Disapproval in `approveUSDPrice` Function,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L229","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-121,PriceFeed can first `disapproveUSDPrice` and then `approveUSDPrice`,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L230","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-324,`approveUSDPrice` don't have a check to make sure proposal has disapproval before approval.,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L231","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-116,Possible double voting potentially could manipulate USD price logic,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L207,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L218","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233",validation-150,"DUPE-LockManager-009,DUPE-LockManager-010",
Satisfactory,validation-249,Possible approvals of disproven price proposals,Voters can disapprove and then approve due to lack of disapprovals check,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L288-L290,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L242","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L191C9-L197C51,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L288-L290",validation-150,"DUPE-LockManager-003,DUPE-LockManager-010,DUPE-LockManager-037",
Satisfactory,validation-266,"`APPROVE_THRESHOLD` Set to 1 in `LockManager` Contract Requires 2 Approvals, Contradicting Expected Single Approval Behavior",Weird edge case of bad config,,Overinflated severity. Admin setting an APPROVE_THRESHOLD of 1,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L135C9-L135C38",https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142-L174,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142-L174,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L135C9-L135C38",validation-162,"DUPE-LockManager-026,DUPE-LockManager-027",
Satisfactory,validation-78,Fee-on-tranfer tokens will mess up the accounting of the `LockManager` contract,WeirdERC20 (fee-on-transfer),,Reported by bot M-1 and disregarded by sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-520,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-410,Fee-on-Transfer tokens are not handled for the lock function,WeirdERC20 (fee-on-transfer),,Reported by bot M-1 and disregarded by sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-520,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-97,Incompatible with fee-on-transfer tokens,WeirdERC20 (fee-on-transfer),,Reported by bot M-1 and disregarded by sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-520,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-7,Contracts are vulnerable to fee-on-transfer accounting-related issues,WeirdERC20 (fee-on-transfer),,Reported by bot M-1 and disregarded by sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-520,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-393,Using Fee-On-Transfer Tokens will lead to user token loss.,WeirdERC20 (fee-on-transfer),,Reported by bot M-1 and disregarded by sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-520,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-380,Fee-On-Transfer Tokens Are Not Supported,WeirdERC20 (fee-on-transfer),,Reported by bot M-1 and disregarded by sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-520,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-407,Protocol doesn't work with fee on transfer tokens,WeirdERC20 (fee-on-transfer),,Reported by bot M-1 and disregarded by sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L373-L377,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-520,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-594,Unlocking tokens can lead to user permanently losing his locked tokens.,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-131,Missing `transferFrom` check leading to locking exploit,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-130,Unchecked Token Transfer,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-507,No checks for return value of token transfer,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-62,Unchecked ERC20 transfers can cause lock up,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-513,Incorrect Handling of ERC20 Transfers in Locking Mechanism,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-106,Funds locked due to missing transfer check,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-235,Missing return value check for transferFrom in _lock function,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-521,Users can increase their locked balance without actually transferring tokens when no-revert-on-failure tokens are used,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-3,Use safeTransfer consistently instead of transfer,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-218,Silent Token Transfer Failure in LockManager Contract Leads to Incorrect Accounting and Potential Loss of Funds,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-621,Return value of token.transferFrom() not checked,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-37,"The missing assertion of a boolean return value of `transferFrom` allows draining the whole market of a token if the token doesn't revert on failures, but just returns ""false""",WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-99,Locked tokens may be irretrievable if no-revert-on-failure tokens are used,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-248,Contract doesn't handle ERC20 token which `don't revert on failure` which cause user fund loss,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",validation-610,"DUPE-LockManager-011,DUPE-LockManager-012",
Satisfactory,validation-226,Use of .transfer() Instead of safeTransfer,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376",validation-610,"DUPE-LockManager-004,DUPE-LockManager-011",
Unsatisfactory,validation-70,Missing validation for minLockDuration in configureLockdrop() could lead to malfunction of lock logic,Admin mistake,,User can create a lock < minLockDuration when lockdrop is not active,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351",,,
Unsatisfactory,validation-52,"Lockdrop Configuration Allows Setting End Time to Current Block Timestamp, Making Lockdrop Immediately Expired.",Admin mistake,,Reckless admin mistake,,,,,,,
Unsatisfactory,validation-292,Duplicate Token Contracts in `configuredTokenContracts` Array Due to Flawed Logic in `configureToken` Function,Admin mistake + report is too vague in impact.,,Admin error. Assumes token configured with nftCost = 0,,,,,,,
Unsatisfactory,validation-58,Attackers can pre-empt transactions to gain more rewards,Any oracle update can be front-runned. Latency of the oracle is a design decision.,,,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L461,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L461,,,
Unsatisfactory,validation-77,Looping over unbounded array can result in a state of DoS,Array can grow in an unbounded fashion. Seems admin mistake,,Overinflated severity. Unrealistic DOS,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,
Unsatisfactory,validation-127,Permanent DoS due to non-shrinking array usage in an unbounded loop,Array can grow in an unbounded fashion. Seems admin mistake,,Overinflated severity. Unrealistic DOS,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,
Unsatisfactory,validation-537,If `configuredTokenContracts` will become large it will lead to DoS of some function.,Array can grow in an unbounded fashion. Seems admin mistake,,Clearly overinflated severity. Unrealistic DOS,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,
Unsatisfactory,validation-177,Looping over unbounding array may lead to DoS,Array can grow in an unbounded fashion. Seems admin mistake,,Clearly overinflated severity. Unrealistic DOS,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,
Unsatisfactory,findings-59,Setting a lock duration can be permanently DOS'd,Array can grow in an unbounded fashion. Seems admin mistake,,DOS would require a huge length value,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L122,,,
Unsatisfactory,validation-246,Unchecked transfer on the unlock function within the LockManager contract because it does not use SAFERC20 IERC20.safeTransfer instead it is incorrectly using IERC20.transfer,Bot finding,,Reported by bot M-4,,,,,,,
Unsatisfactory,validation-535,Dubious typecast in the functions called setLockDuration & _lock proposeUSDPrice & configureLockDrop and unlock function,Bot finding,inflated severity,Invalid. duration < MaxLockDuration,,,,,,,
Unsatisfactory,validation-113,LockManager.sol will not earn yield if `call` to `configureClaimableYield()` function fails because boolean `success` is not checked.,Call sucess not validated,,Out of scope. May be worth mentioning to sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L40-L47,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L40-L47,,,
Unsatisfactory,findings-55,Configuring ETH yield for LockManager may unknowingly fail,Call sucess not validated,OOS,Out of scope. May be worth mentioning to sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L40-L47,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L40-L47,,,
Unsatisfactory,findings-58,Gas is configured as claimable but cannot be claimed,Contract does not have logic to claim blast rewards.,,Incorrect. Yield can be claimed by admins,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L38,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L38,,,
Unsatisfactory,findings-30,Lock manager cannot claim its ETH yield and will lose if forever,Contract does not have logic to claim blast rewards.,,Out of scope. May be worth mentioning to sponsor,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L38,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/BaseBlastManager.sol#L38,,,
Unsatisfactory,validation-605,Uniform USD Price Update for Multiple Tokens in `_execUSDPriceUpdate` Function,Design decision,,"Overinflated severity (edge case, but worth checking)",,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,
Unsatisfactory,validation-180,It's not possible to get enough NFTs,Design decision,,Overinflated severity. The protocol expects users to mint < type(uint32).max,,,,,,,
Unsatisfactory,validation-599,Locking Tokens Outside `Lockdrop` Period Without Benefits,Design decision + user mistake?.,,Invalid. Users will receive schnibbles as rewards,,,,,,,
Unsatisfactory,validation-477,"The Remainder Mechanism Forces User Actions and Locks Funds Unintended for NFT Purchase, Should Be Replaced with Slippage and Refund at Purchase",Design decision.,inflated severity,,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L343-L347,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361-L370","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L343-L347,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361-L370",,,
Unsatisfactory,validation-151,User cannot withdraw his remainder,Design Decision. User will need to wait for following lockdrop event,,Users can't unlock their remainder tokens,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,,
Unsatisfactory,validation-377,LockDrop end variable is not used to unlock the token,Design decisions. Users can set lock durations that ends before the lockDrop ends,,"Invalid. end variable is used to determine the lockbox duration, not the lock duration of users",,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L354,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L354,,,
Unsatisfactory,findings-53,Munchables can be acquired using a flash loan,Frontrun configuration to avoid boundaries.,,Incorrect. In order to mint 0 >= block.timestamp if no configuration was set,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L356C12-L360C49,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L98",,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L356C12-L360C49,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L98",,,
Unsatisfactory,validation-40,Protocol assumes support for `balance changing outside transfers` tokens but in reality using this would break protocol,GPT,,"Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-93,Lack of Access Control: Manipulation of Roles when Proposing USD Price,GPT,,Overinflated severity. Assumes malicious price feed,,,,,,,
Unsatisfactory,validation-87,Missing Setter Function Initialization in LockManager Constructor,GPT,,Invalid. No clear impact,,,,,,,
Unsatisfactory,validation-370,Inconsistent Initial Approval Handling in `proposeUSDPrice()`,GPT,,The check to prevent approving one's proposal avoids double voting,,,,,,,
Unsatisfactory,validation-297,approveUSDPrice(uint256)' Function Contains Ineffective 'revert ProposerCannotApproveError()',GPT,,Invalid. Proposer accounts for a positive vote,,,,,,,
Unsatisfactory,validation-559,flaw Due to Uninitialized Loop in getLockedWeightedValue,GPT,,Incorrect. Default initialized values for uint is 0,,,,,,,
Unsatisfactory,validation-294,Incorrect Assumption in `setUSDThresholds` Function May Lead to Unintended Behavior and Proposal Inconsistencies,GPT,,Invalid. The address(0) check is valid,,,,,,,
Unsatisfactory,validation-290,Insufficient Condition in `onlyConfiguredToken` Modifier May Cause Unintended Reverts for Configured Tokens with Zero `nftCost`,GPT,,Admin error. Assumes token configured with nftCost = 0,,,,,,,
Unsatisfactory,validation-547,Fail Handling Players with No Locked Tokens,GPT,,Clearly overinflated severity. No actual impact,,,,,,,
Unsatisfactory,validation-29,Read-Only-Re-entrancy if read in other functions starting from getLockedWeightedValue,GPT,,Overinflated severity. Burden of proof. No viable re-entrancy vector exploitable by a user with impact,,,,,,,
Unsatisfactory,validation-193,Potential Reentrancy Vulnerability in proposeUSDPrice Function,GPT,,Proof of concept does not pass the burden of proof test. It doesn't explain how a re-entrancy would be exploitable,,,,,,,
Unsatisfactory,validation-584,Integer Overflow in `LockManager::setLockDuration` potentially leading to unexpected behavior.,GPT,inflated severity,Invalid. duration < MaxLockDuration,,,,,,,
Unsatisfactory,validation-212,Incorrect Incrementation of `_usdProposalId` Leads to Approval Tracking Issues,GPT,,Proof of concept does not pass the burden of proof test. No demonstrated impact,,,,,,,
Unsatisfactory,validation-552,Lack of Validation for `_price` Parameter in `proposeUSDPrice` Function,GPT,,Clearly overinflated severity. Assumes error in proposal + error in majority of voting,,,,,,,
Unsatisfactory,validation-332,Improper Handling of Token Decimal Precision in `LockManager` Contract,Impact description is too vague. Code snippets makes no sense,,Invalid. Assumes admin error when setting prices for tokens with < decimals,,,,,,,
Unsatisfactory,validation-98,user can unlocked token in the same unlock time due to the operator used to check against block.timestamp.,Impact is not clear in the report. At best QA.,,Invalid. Assumes lock duration == 0,,,,,,,
Unsatisfactory,validation-533,`lockRecipient` and `onBehalfOf` address could be same.,Impact is not clear. Low quality report.,"invalid, transfer does not happen from address(this)",Invalid. No actual impact,,,,,,,
Unsatisfactory,validation-338,User unlockTime update error,Incorrect unlockTime computation,IQ,Low effort,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L265C17-L267C39,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257-L258,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257-L258,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L265C17-L267C39",,,
Unsatisfactory,validation-562,Spamming wrong price could disrupt protocol stability,Invalid,,Invalid. Proposals can't be enacted when one is currently being executed,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,,,
Unsatisfactory,validation-107,Weird WETH behavior on blast L2,Invalid,,"Invalid. The ""weird"" behaviour doesn't affect this contract. _tokenOwner != address(this) in the transferFrom. Users are expected to approve the contract",,,,,,,
Unsatisfactory,validation-373,`_lock()` always revert due to special behaviour of `weth.transferFrom()` in BLAST,Invalid,,"Invalid. The ""weird"" behaviour doesn't affect this contract. _tokenOwner != address(this) in the transferFrom. Users are expected to approve the contract",,,,,,,
Unsatisfactory,validation-11,"Due to WETH transfer compatibility issue on Blast, users will not be able to lock their WETH",Invalid,,"Invalid. The ""weird"" behaviour doesn't affect this contract. _tokenOwner != address(this) in the transferFrom. Users are expected to approve the contract",,,,,,,
Unsatisfactory,validation-217,Incorrect calculations of the number of NFTs and the remainder when the `quantity` is less than `configuredToken.nftCost`.,Invalid,,Invalid. Remainder keeps track of unused funds,,,,,,,
Unsatisfactory,validation-500,any ERC20 asset sent directly into the contract will be lost forever as there's no mechanism to retrieve them,Invalid,inflated severity,User error,,,,,,,
Unsatisfactory,validation-239,The protocol does not check for a zero duration,Invalid,inflated severity,Incorrect. The POC sets a minLockDuration = 0 which would be an admin error,,,,,,,
Unsatisfactory,validation-379,Missing `notPaused` modifier,Invalid,,Overinflated severity and the recommendation can do more harm than good. Pausing price updates can affect harvest in unlock which is not pausable,,,,,,,
Unsatisfactory,validation-15,lockOnBehalf() is operating on the tokens of msg.sender,Invalid,,Invalid. The caller of lockOnBehalf is the one locking their funds,,,,,,,
Unsatisfactory,validation-299,Incorrect Condition in `_execUSDPriceUpdate` Function May Cause Inconsistent USD Price Updates,Invalid,,Invalid. The intention seems to be that the token has been configured,,,,,,,
Unsatisfactory,validation-591,Unexpected Revert Behavior in receive() Function and Ether Handling Vulnerability in _lock Function,Invalid,,Invalid. The revert in the receive doesn't affect payable functions from receiving ETH,,,,,,,
Unsatisfactory,validation-4,LockManager.sol can receive ETH but has no withdraw function for it,Invalid,,Incorrect. The functions will revert,,,,,,,
Unsatisfactory,validation-51,configureLockdrop does not set the MinlockDuration allowing users to unlock at anytime,Invalid,,User can create a lock < minLockDuration when lockdrop is not active,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351",,,
Unsatisfactory,validation-301,Uninitialized Address Member in `LockedTokenWithMetadata` Struct Causes Unexpected Behavior or Errors in `getLocked` Function,Invalid,,Invalid claims,,,,,,,
Unsatisfactory,validation-291,Incorrect Calculation of `minLockDuration` May Result in Negative Value and Security Vulnerabilities,Invalid,,Invalid. The function would revert with underflow,,,,,,,
Unsatisfactory,validation-303,Incorrect Calculation of `numberNFTs` Variable Leads to Users Receiving Insufficient NFTs,Invalid,,Invalid. Remainder keeps track of unused funds,,,,,,,
Unsatisfactory,validation-302,Insufficient Contract Balance Handling in unlock Function Causes Potential Loss of Funds and Inconsistent State,Invalid,,Reported by bot M-2,,,,,,,
Unsatisfactory,validation-408,The user cannot lock their tokens due to the wrong implementation of the zero address check.,Invalid,,Invalid. The 0 address represents the native token which doesn't have allowance,,,,,,,
Unsatisfactory,validation-295,Incorrect Incrementation of `_usdProposalId` Leads to Inconsistent Approval Tracking and Potential Unauthorized Price Updates,Invalid,,Incorrect. The function can't be called again and again when there is an in progress proposal,,,,,,,
Unsatisfactory,validation-44,Players can call lock/unlock at will with zero amount,Invalid,,Adversary can forceHarvest other users,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L341,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L293","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L341,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L293",,,
Unsatisfactory,validation-88,mapping - deletion,Invalid,,"Possible report improvement (since it doesn't show a real impact). approvals/disapprovals are mappings that would not be deleted in usdUpdateProposal, and may prevent voting for a second time because of the usdUpdateProposal.approvals[msg.sender] and usdUpdateProposal.disapprovals[msg.sender] checks",,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L161,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L238,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L525,https://github.com/code-423n4/2024-05-munchables/blob/main/src/interfaces/ILockManager.sol#L65-L66","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L161,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L238,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L525,https://github.com/code-423n4/2024-05-munchables/blob/main/src/interfaces/ILockManager.sol#L65-L66",,,
Unsatisfactory,validation-323,proposal  approve pass rate and disapprove pass rate are different,Invalid,,Invalid. The recommendation says what the code does,,,,,,,
Unsatisfactory,validation-84,Protocol's logic in regards to an NFT cost would cause the over/undervaluation of a locked position with time,Invalid,,,,,,,,,
Unsatisfactory,validation-412,Allowance cannot be used to unlock,Invalid,,Incorrect. Misuse of allowance suggested,,,,,,,
Unsatisfactory,validation-258,Players Who Lock Value Less Than the NFT Cost Won't Receive Any NFT during the lock period,Invalid,,Overinflated severity + false claims (nftPrice can be consulted),,,,,,,
Unsatisfactory,validation-609,Players May Incur Losses Due to Price Discrepancy Between `nftCost` and `USD` Value of Configured Tokens,Invalid,inflated severity,"Assumes the admin won't update the nft price regularly. But it is a fair claim, since price discrepancies will always happen, and the use of an oracle would be recommended",,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L115-L127,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363-L369","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L115-L127,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L363-L369",,,
Unsatisfactory,validation-465,USD proposals will never be proposed due to wrong implementation of zero check.,Invalid,,Invalid. The recommendation will break proposals,,,,,,,
Unsatisfactory,validation-607,Lack of Revert When DISAPPROVE_THRESHOLD Is Not Reached,Invalid,,Invalid. The suggestion would not allow to cast negative votes,,,,,,,
Unsatisfactory,validation-277,Incorrect Weighted Average Calculation in getLockedWeightedValue,Invalid,,"Invalid. The function calculates locked weighted value, not average",,,,,,,
Unsatisfactory,validation-612,approveUSDPrice() increases usdUpdateProposal.approvalsCount even if approve threshold is not reached,Invalid,,Invalid. Approvals should be counted until they reach the threshold,,,,,,,
Unsatisfactory,validation-534,Users cannot withdraw their locked tokens if the contract is paused,Invalid,,Users can't unlock their tokens when contract is paused,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L404,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L404,,,
Unsatisfactory,validation-287,Missing Handling of Unapproved USD Price Update Proposals Leads to Stale or Inconsistent Data,Invalid,,"Overinflated severity (edge case, but worth checking)",,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,
Unsatisfactory,validation-310,Users receive incorrect amount of rewards when USD value is updated,Invalid,OOS/intended functionality,Different rewards at different times depending on the price,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/AccountManager.sol#L366,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L476-L482","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/AccountManager.sol#L366,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L476-L482",,,
Unsatisfactory,validation-102,Lack of Validation for `nftCost` in `configureToken` Function,Invalid,,Admin error. Assumes token configured with nftCost = 0,,,,,,,
Unsatisfactory,validation-336,Automatic Approval by Proposer in proposeUSDPrice Function Reduces Required Approvals,Invalid,,The proposer signals a positive vote when proposing,,,,,,,
Unsatisfactory,validation-483,Users can withdraw the native token by passing a zero address in `_unlock`.,Invalid,,Invalid. The 0 address represents the native token,,,,,,,
Unsatisfactory,validation-89,Reentrancy Vulnerability in unlock Function,Invalid,,Overinflated severity. Burden of proof. No viable re-entrancy vector exploitable by a user with impact,,,,,,,
Unsatisfactory,validation-471,"The `lockedToken.quantity` can be unlinked from `nftOverlord.unrevealedNFTs` (quantity will be greater) when a user lock outside of the `lockdrop`, resulting in fewer received `MunchableNFTs`",Invalid,,Remainder is reset if locked outside of lockbox period,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L391,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L391,,,
Unsatisfactory,validation-195,Quick executing `_execUSDPriceUpdate()` upon reaching the `APPROVE_THRESHOLD` prevents accumulating sufficient disapproval votes to reject the proposal and leads to the establishment of a price that should have been rejected,Invalid,,Admin error by configuring inconsistent thresholds,,,,,,,
Unsatisfactory,validation-426,Lock will not update user position correctly and can cause theft of funds,Invalid,,Invalid. lockedToken and lockedTokens server different purpouses,,,,,,,
Unsatisfactory,validation-216,Incorrect Assignment of tokenOwner Variable in lockOnBehalf Function,Invalid,,Invalid. User error + incorrect recommendation,,,,,,,
Unsatisfactory,validation-17,Any attempt to lock ETH fails,Invalid,,Invalid. The revert in the receive doesn't affect payable functions from receiving ETH,,,,,,,
Unsatisfactory,validation-223,Unintended Update of USD Prices for Token Contracts with Non-Zero `nftCost`,Invalid,,Invalid. Assumes nftCost = 0 with a usd pricing,,,,,,,
Unsatisfactory,validation-134,"Tokens can be locked outside the ""Lockdrop timeframe"".",Invalid,,Invalid. Expected behaviour (users just won't get the boost of minting),,,,,,,
Unsatisfactory,validation-538,unlock function also uses notpaused modifier thus it can prevent the user to withdraw their tokens.,Invalid,,Users can't unlock their tokens when contract is paused,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L404,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L404,,,
Unsatisfactory,validation-283,"A price feed role owner can remove previously set proposed USD prices at will by constantly setting new proposals and deleting the old one, possibly never allowing a proposal to actually ever go through",Invalid,,Overinflated severity. Malicious trusted role (disregarded by sponsor for admin and for price feeds),,,,,,,
Unsatisfactory,validation-176,Thresholds for approving and disapproving proposals cannot be properly set because of the incorrect datatype,Invalid,,Overinflated severity. Assumes > 50 feeds per role,,,,,,,
Unsatisfactory,validation-155,Incorrect `deltaDecimal` Calculations in `getLockedWeightedValue` Resulting in Zero Value,Invalid.,,Invalid. Price is in 1e18 units,,,,,,,
Unsatisfactory,validation-198,The protocol does not implement the Blast yield claim method when rewardsManagerAddress is empty,Invalid.,,Out of scope. May be worth mentioning to sponsor,,,,,,,
Unsatisfactory,validation-20,Potential Smart Contract Configuration and Security Risks in Blockchain Deployment Script,Invalid.,,Out of scope / Generic recommendations,,,,,,,
Unsatisfactory,validation-182,WETH compatibility issue on Blast chain,Invalid.,,"Invalid. The ""weird"" behaviour doesn't affect this contract. _tokenOwner != address(this) in the transferFrom. Users are expected to approve the contract",,,,,,,
Unsatisfactory,validation-553,InvalidLockDurationError revert can cause a block for users when use lock method,Invalid.,,Invalid. Users would just have to choose a duration within the new limit. Also assumes that admin will change duration during lockbox,,,,,,,
Unsatisfactory,validation-219,Incorrect Handling of Remainder Value in getLocked Function Leads to Inconsistent Contract State and Misleading User Experience,Invalid.,,Proof of concept does not pass the burden of proof test. No actual impact mentioned,,,,,,,
Unsatisfactory,validation-545,USD price proposer can double vote for the USD price he proposed.,Invalid. approvals mapping is updated and checked.,,,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L211","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L211",,,
Unsatisfactory,validation-392,Yeild for `ETH` will lost,Invalid. From readme it says WETH and USDB,,Out of scope. Worth checking with sponsor,,,,,,,
Unsatisfactory,validation-317,`lastlockTime` isnt updated when users call `setLockDuration()`,Invalid. lastLockTime is when you lock tokens. It fails to identify the root cause outlined in 338 and similars,,Users can reduce the lock time for locked tokens,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257-L258,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257-L258,,,
Unsatisfactory,validation-544,Users can gain rewards from unlock method more than it should be,Invalid. Rewards are computed from the already passed time.,,,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L414,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/AccountManager.sol#L372,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/AccountManager.sol#L366","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L414,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/AccountManager.sol#L372,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/AccountManager.sol#L366",,,
Unsatisfactory,validation-542,unlock with partial quantity can cause user loss of rewards.,Invalid. Rewards are computed with the full quantity.,,,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L414,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L414,,,
Unsatisfactory,validation-528,Lack of support for native USDB/WETH in `LockManager.sol`,Invalid. The are configured to not rebase,,USDB/WETH are configured as CLAIMABLE and can be claimed by admins,,,,,,,
Unsatisfactory,validation-512,User will lose NFTs due to auto rebasing of USDB/WETH.,Invalid. The are configured to not rebase,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-446,Rebasing Tokens USDB and WETH aren't handled correctly by lockManager,Invalid. The are configured to not rebase,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-74,Wrong calculation of quantity and remainder leads to loss of fund,Invalid. The code is correct.,,Invalid. Remainder keeps track of unused funds,,,,,,,
Unsatisfactory,validation-536,configuredTokenContracts can be blocked from updating unlockTime in setLockDuration,Invalid. The current design is based on only having one lockDuration.,,One tocken lock can affect others. (TBD if this is meant by the Main Invariants),,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L252,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L260","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L252,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L260",,,
Unsatisfactory,validation-305,Unauthorized Token Locking in `lockOnBehalf` Function Allows Malicious Actors to Lock Tokens on Behalf of Other Users Without Permission,Invalid. USDB and WETH are configured to not rebase.,,Adversary can prolong locking time of other users,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L293,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L293,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-94,Incompatibility of LockManager Contract with Blast's Rebasing Mechanism,Invalid. USDB and WETH are configured to not rebase.,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-8,The yield of `USDB` and `WETH` will be locked in the `LockManager`,Invalid. USDB and WETH are configured to not rebase.,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-12,Accrued Yield Lost Due to Rebasing Tokens (USDB) in Lock Mechanism,Invalid. USDB and WETH are configured to not rebase.,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-319,USDB and WETH yield will be lost,Invalid. USDB and WETH rebasing is configured to not rebase,,USDB/WETH are configured as CLAIMABLE and can be claimed by admins,,,,,,,
Unsatisfactory,validation-256,WETH/USDB rebasing issue in blast,Invalid. USDB and WETH rebasing is configured to not rebase,,USDB/WETH are configured as CLAIMABLE and can be claimed by admins,,,,,,,
Unsatisfactory,validation-128,Inaccurate Token Calculation for Rebasing Tokens,Invalid. USDB and WETH rebasing is configured to not rebase,Blast,USDB/WETH are configured as CLAIMABLE and can be claimed by admins,,,,,,,
Unsatisfactory,validation-396,Potential Loss of Rebasing Rewards in LockingMultiRewards Contract,Invalid. USDB and WETH rebasing is configured to not rebase,Blast,USDB/WETH are configured as CLAIMABLE and can be claimed by admins,,,,,,,
Unsatisfactory,validation-572,Rebasing token USDB is not being handled properly,Invalid. USDB and WETH rebasing is configured to not rebase,,USDB/WETH are configured as CLAIMABLE and can be claimed by admins,,,,,,,
Unsatisfactory,validation-353,Wrong handling of rebasing tokens (USDB),Invalid. USDB is configured to not rebase,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-109,Protocol is not compatible with tokens more than 18 decimals,Issues with > 18 or < 6 decimals.,insufficient quality,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-184,Protocol doesn't follow documentation. While docs states it supports low decimal tokens - protocol will return incorrect result for low decimal tokens,Issues with > 18 or < 6 decimals.,,Assumes admin error by setting the same price to tokens with != decimals,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-304,Risk of Inaccurate Locked Weighted Value Due to Unsupported Decimals,Issues with > 18 or < 6 decimals.,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-300,Incorrect Calculation of `deltaDecimal` Variable in `getLockedWeightedValue` Function Causes Inaccurate Weighted Values for Tokens with More Than 18 Decimal Places,Issues with > 18 or < 6 decimals.,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-518,` getLockedWeightedValue` breaks if tokens have more than 18 decimals or fewer than 6 decimals,Issues with > 18 or < 6 decimals.,,Assumes admin error by setting the same price to tokens with != decimals. The code doesn't expect tokens > 18 decimals. Sponsor confirmation,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-114,The less decimals a token has the more reward a user gets,Issues with > 18 or < 6 decimals.,,Assumes admin error by setting the same price to tokens with != decimals,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-123,Inaccurate NFT Calculations Due to Token Decimal Mismatches,Issues with > 18 or < 6 decimals.,,Admin mistake while setting prices,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-461,Token configure can accept tokens with more or less than 18 decimals,Issues with > 18 or < 6 decimals. This report does not point out where the code have issues.,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L473,,,
Unsatisfactory,validation-457,There is no function to allowing users to unlock their remaining tokens(remainder). The unlock function does not allow users to withdraw their remaining tokens.,Low quaility report.,"invalid, stored quantity includes remainder",Users can't unlock their remainder tokens,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,,
Unsatisfactory,validation-63,"wrong ""approvalsCount""  in LockManager",Low quality,,Invalid. The proposer vote counts as a positive vote,,,,,,,
Unsatisfactory,validation-65,ERC20 tokens can have more than 18 decimals in getLockedWeightedValue.,Low quality report,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,,
Unsatisfactory,validation-348,A price feed can approve and disapprove the same usd proposal,Low quality report,"insufficient quality, and the check does exist in disapprove",,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L209","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L233,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L209",,,
Unsatisfactory,validation-463,Locking ETH/ERC20 tokens on behalf of unprepared contracts results in loss of funds,Low quality report,,User error,,,,,,,
Unsatisfactory,validation-347,"Users can't lock assets because of overflow, so protocol gets insolvency for a while",Low quality report,inflated severity,Overinflated severity. Issue in 82 years,,,,,,,
Unsatisfactory,validation-551,The lock() function will always revert if minLockDuration is bigger than the MaxLockDuration,Low quality report,,Admin error,,,,,,,
Unsatisfactory,validation-228,"When _tokenContract is not zero address, there is no check if msg.value matches quantity, msg.value is 0, or allowance is less than quantity",Low quality report,,Invalid. msg.value checks should not happen when locking a non-native token,,,,,,,
Unsatisfactory,validation-595,Inconsistent Token Value Handling in `_lock` Function,Low quality report,,Proof of concept does not pass the burden of proof test. No proof of what would be broken or how,,,,,,,
Unsatisfactory,validation-474,Users will get less `_lockedWeightedValue` due to precision loss in `getLockedWeightedValue()`.,Low quality report,,Incorrect. The 1e18 division is due to the pricing being in 1e18 units,,,,,,,
Unsatisfactory,validation-464,"The way you update the price of a token is wrong, because you don't use the price directly from an Oracle.",Low quality report.,invalid,Invalid. The price proposals actually work as an oracle,,,,,,,
Unsatisfactory,validation-573,Lack of _quantity Check in lock and lockOnBehalf Functions.,Low quality report.,insufficient quality,Incomplete effort,,,,,,,
Unsatisfactory,validation-47,_lock function should check the validation of _tokenContract.,Low quality report.,"invalid, function will revert on attempting to divide by configuredToken.nftCost",Admin error,,,,,,,
Unsatisfactory,validation-57,Users will lose their remainder,Low quality report.,,Users can't unlock their remainder tokens,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,,
Unsatisfactory,validation-64,"There should be a limit on ""setUSDThresholds"" in LockManager",Low quality.,,Clearly overinflated severity. No impact described,,,,,,,
Unsatisfactory,validation-23,Missing validation for lockDrop start date - it can be set to the past,Missing validation for lockDrop range,,Admin error,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L98,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L98,,,
Unsatisfactory,validation-409,[M-01] Lockdrop can be configured in a way to DoS the locking mechanism,Missing validation for lockDrop range,,Overinflated severity. Admin error / Malicious admin,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L98,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L98,,,
Unsatisfactory,validation-203,usdPriceProposal can be deleted without approval when approveUSDPrice is called and also without approveUSDPrice reverting,Mistake of trusted roles.,,Admin error (via price feed),,,,,,,
Unsatisfactory,validation-213,Failure to Reset `_usdProposalId` Causes Approval Issues for New Proposals,No way to identify proposals in an unique way may lead to wrong votes.,,Incorrect. Each time a new proposal is made _usdProposalId is incremented,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,
Unsatisfactory,validation-119,`LockManager.approveUSDPrice` and `LockManager.disapproveUSDPrice's` check is not correct,No way to identify proposals in an unique way may lead to wrong votes.,inflated severity,Invalid. Can't propose if there is a proposal in progress,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,
Unsatisfactory,validation-298,Non-Unique `_usdProposalId` Values May Cause Incorrect Approval Tracking and Potential Security Vulnerabilities,No way to identify proposals in an unique way may lead to wrong votes. But this one is too vague in the impact,,Incorrect. _usdProposalId is unique for each proposal,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,
Unsatisfactory,validation-501,Read-Only-Re-entrancy if read in other functions starting from getPlayerSettings,Non sense,,Overinflated severity. Burden of proof. No viable re-entrancy vector exploitable by a user with impact,,,,,,,
Unsatisfactory,validation-514,Read-Only Re-entrancy in the getLocked function,Non sense,,Overinflated severity. Burden of proof. No viable re-entrancy vector exploitable by a user with impact,,,,,,,
Unsatisfactory,validation-188,"`LockManager::_lock` allows for multiple locks without reducing the token amount, enabling you to accumulate more tokens than your original holdings.",Non sense,,"Proof of concept does not pass the burden of proof test. The report states ""Funds can be stolen by malicious players"" but it locks/unlocks their funds",,,,,,,
Unsatisfactory,validation-360,PriceFeed will report stale prices,Oracle latency is a design decision.,,Overinflated severity as it implies malfunctioning of price feeds. Worth exploring,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L202-L203,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L202-L203,,,
Unsatisfactory,validation-143,Number of NFTs can overflow,Overflows are not possible,,Invalid. The code currently has the suggested check,,,,,,,
Unsatisfactory,validation-308,Incorrect decimals configuration can lead to breaking external functionality,Overinflated,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,,
Unsatisfactory,validation-189,Tokens with more than 18 decimal points will cause issues,Overinflated,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,,
Unsatisfactory,validation-372,The entire locking/unlocking functionality can be DOS'ed.,Overinflated,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,,
Unsatisfactory,validation-455,Contract does not account for fee on transfer tokens,Overinflated,,Reported by bot M-1 and disregarded by sponsor,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-570,LockManager does not handle Fee on Transfer tokens properly,Overinflated,,Reported by bot M-1 and disregarded by sponsor,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-262,Unsafe downcasting of _duration leads to precision loss,Overinflated,,Invalid. duration < MaxLockDuration,,,,,,,
Unsatisfactory,findings-64,Token prices can change even if the contracts are in a paused state,Overinflated,,Pausing price updates does more harm than good,,,,,,,
Unsatisfactory,findings-24,Delayed proposal execution may execute when conditions are unfavourable,Price proposals do not have expiration. I would say this is QA.,inflated severity,Overinflated severity. Assumes trusted components not to be working.,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L142,,,
Unsatisfactory,findings-3,Precision loss in `getLockedWeightedValue`,Proof insuffcieint.,inflated severity,"Overinflated severity. Might be worth checking if the ""dust"" amounts are worth any meaning impact",,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L481-L482,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L481-L482,,,
Unsatisfactory,validation-583,Current USD update proposal cannot be read by the price feeds leading to no way to know the current proposal's price as there is no getter function for it as well,QA at best,,Proof of concept does not pass the burden of proof test. No proof that the price feeds need to read this variable. An USDThresholdUpdated event is emitted,,,,,,,
Unsatisfactory,validation-125,`LockManager.approveUSDPrice` and `LockManager.disapproveUSDPrice`  are vulnerable to reorg attack,QA at best,,Overinflated severity. Re-organization attack,,,,,,,
Unsatisfactory,validation-117,Default `miniLockDuration` always  Used for Locking on Behalf of Others,QA at best. Design decision.,not an issue,Feature improvement suggested,,,,,,,
Unsatisfactory,validation-110,A user cant withdraw the remainder,QA at best. Design decision.,,Users can't unlock their remainder tokens,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,,
Unsatisfactory,validation-259,Rebase Tokens Not Supported,Rebase tokens,,"Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-18,Non-standard ERC20 tokens not properly accounted for,Rebase tokens,,"Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-564,Incompatibility with Rebased Tokens Leads to Balance Discrepancies,Rebase tokens,,"USDB/WETH are configured as CLAIMABLE and can be claimed by admins. Other rebasing tokens listed as a ""Mistake"" by the sponsor in the Readme",,,,,,,
Unsatisfactory,validation-265,Potential Loss of Funds in _lock Function,Remainder is reset in lock causing a loss to users,,Invalid. Users can lock/unlock without losing assets outside of the lockbox period,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,,
Unsatisfactory,validation-41,Players can send funds using the lock method even outside the lockdrop timeframe,Remainder is reset in lock causing a loss to users,,Invalid. Expected behaviour (users just won't get the boost of minting),https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,,
Unsatisfactory,validation-597,User gets no NFT from subsequent token locks when initial locked quantity is less than nft cost.,Remainder is reset in lock causing a loss to users. This one do not identify the root cause is that the problem when lock happens outside a lockdrop event.,,"Proof of concept does not pass the burden of proof test. The report doesn't mention remainder not being set because of lockbox period, and the lines marked out do not point to it either",https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379,,,
Unsatisfactory,validation-183,Protocol doesn't follow documentation. While docs states it supports high decimal tokens - protocol will revert when high decimal tokens are being used,Repeated,,The code doesn't expect tokens > 18 decimals. Sponsor confirmation,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol/#L473,,,
Unsatisfactory,validation-453,Contract does not account for fee on transfer tokens,repeated,,Duplicate report #455,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-452,Contract does not account for fee on transfer tokens,repeated,,Duplicate report #455,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-450,Contract does not account for fee on transfer tokens,repeated,,Duplicate report #455,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-449,Contract does not account for fee on transfer tokens,repeated,,Duplicate report #455,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-447,Contract does not account for fee on transfer tokens,repeated,,Duplicate report #455,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-417,setLockDuration doesn't have unlockTimeLatest controls,repeated,inflated severity,Same issue as #425,,,,,,,
Unsatisfactory,validation-414,setLockDuration doesn't have unlockTimeLatest controls,repeated,inflated severity,Same issue as #425,,,,,,,
Unsatisfactory,validation-413,setLockDuration doesn't have unlockTimeLatest controls,repeated,inflated severity,Same issue as #425,,,,,,,
Unsatisfactory,validation-456,`call()` should be used instead of deprecated `transfer()` on an address payable,repeated,,Reported by bot M-2,,,,,,,
Unsatisfactory,validation-541,unlock with partial quantity can cause user loss of rewards.,repeated,,Same submission #542,,,,,,,
Unsatisfactory,validation-33,Incomplete mapping deletion in the disapproveUSDPrice function,repeated,,"Possible report improvement (since it doesn't show a real impact). approvals/disapprovals are mappings that would not be deleted in usdUpdateProposal, and may prevent voting for a second time because of the usdUpdateProposal.approvals[msg.sender] and usdUpdateProposal.disapprovals[msg.sender] checks",,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L161,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L238,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L525,https://github.com/code-423n4/2024-05-munchables/blob/main/src/interfaces/ILockManager.sol#L65-L66","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L161,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L238,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L525,https://github.com/code-423n4/2024-05-munchables/blob/main/src/interfaces/ILockManager.sol#L65-L66",,,
Unsatisfactory,validation-31,Incomplete Deletion of Mapping in USD Price Update Function,repetead,,"Possible report improvement (since it doesn't show a real impact). approvals/disapprovals are mappings that would not be deleted in usdUpdateProposal, and may prevent voting for a second time because of the usdUpdateProposal.approvals[msg.sender] and usdUpdateProposal.disapprovals[msg.sender] checks",,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L161,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L238,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L525,https://github.com/code-423n4/2024-05-munchables/blob/main/src/interfaces/ILockManager.sol#L65-L66","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L161,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L238,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L525,https://github.com/code-423n4/2024-05-munchables/blob/main/src/interfaces/ILockManager.sol#L65-L66",,,
Unsatisfactory,findings-75,Lock duration for new users will still be forcefully set to lockdrop.minLockDuration even after the Lockdrop period,Report is not clear,,Invalid. Min duration is expected to be 30 days. Sponsor comment,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351,,,
Unsatisfactory,findings-44,Users who unstake + stake get more Munchables than those who extend the stake directly,Report is not clear,,Invalid. Locks < 30 days will be outside of the Schibble Boost Zone,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L423",,,
Unsatisfactory,validation-460,Users cannot set the token `lockDuration < minLockDuration` (30 days) if they directly call the `lock()` function or set the `lockDuration == 0`,Report is not clear,,User can create a lock < minLockDuration when lockdrop is not active,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351",,,
Unsatisfactory,validation-145,`setLockDuration` might be DOSed partially,Report is not clear,,Adversary can prolong locking time of other users,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L293,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L389","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L293,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L389",,,
Unsatisfactory,validation-55,"When migrationManager calls the lock function, the user will lose the locked funds.",Report is not clear,,Remainder is reset if locked during migrations (similar to losing it outside of lockbox periods),,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L393,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L361",,,
Unsatisfactory,validation-543,No check in disapproveUSDPrice() to make sure proposal with equal number of votes does not get deleted,Report is not clear,,Overinflated severity. Assumes thresholds == 1,,,,,,,
Unsatisfactory,validation-478,User cannot unlock all tokens.,Report is not clear,,Users can't unlock their remainder tokens,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401-L427,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L379",,,
Unsatisfactory,validation-401,Users Can Reuse Locked Funds to Mint Multiple NFTs,Report is not clear and too vague.,,Probably expected behaviour by the protocol (worh checking),,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L311-L426,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L311-L426,,,
Unsatisfactory,validation-539,Updating multiple contract's USD price can lead to compromising the USD price for some contracts.,Report is not clear on impact.,,"Overinflated severity (edge case, but worth checking)",,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L177-L179,,,
Unsatisfactory,validation-430,"In the setLockDuration function, the code assigns an incorrect value to the unlockTime. This allows users to reduce the unlocking time.",Report is not clear. It might be related to 338 and similars.,invalid,Low effort,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257-L258,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257-L258,,,
Unsatisfactory,validation-50,PriceFeed congestion may result in delayed price updates,Report is of low quality,inflated severity,Overinflated severity as it implies malfunctioning of price feeds. Worth exploring,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L202-L203,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L202-L203,,,
Unsatisfactory,validation-575,Lack of Quantity Check in lock and lockOnBehalf Functions.,Report is to vague.,inflated severity,"proof of concept does not pass the burden of proof test. The report states ""loss of funds"" but there is no proof of how this can be exploited",,,,,,,
Unsatisfactory,validation-208,`lockDuration` can be set before deposit leading to early unlocking of assets,The report is not clear. May be related to 567 and similars,,User can create a lock < minLockDuration when lockdrop is not active,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351",,,
Unsatisfactory,validation-592,Users can reduce their lock times by locking more tokens after lockDrop is expired.,The report is not clear. May be related to 567 and similars.,users cannot set lock duration to 0 with active locks,Invalid. Assumes the user can set a 0 lock duration if they have locked tokens,,,,,,,
Unsatisfactory,validation-397,No check for `minLockDuration` in `_setLockDuration`.,The report is not clear. May be related to 567 and similars.,,User can create a lock < minLockDuration when lockdrop is not active,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351",,,
Unsatisfactory,validation-132,Price in USD may not be available for update due to potential blocked proposal,Thresholds deadlocks. I would say this is admin error,,Overinflated severity. Admin misconfiguration,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,
Unsatisfactory,validation-475,The `setUSDThresholds` function does not check the maximum THRESHOLD value,Thresholds deadlocks. I would say this is admin error,,Reckless admin mistake,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,
Unsatisfactory,validation-163,Setting `DISAPPROVE_THRESHOLD` to 0 results in the inability to pass proposals even when `APPROVE_THRESHOLD` is reached.,Thresholds deadlocks. I would say this is admin error,,Reckless admin mistake by setting DISAPPROVE_THRESHOLD to 0,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,
Unsatisfactory,validation-444,Centralization in function `setUSDThresholds` can cause votes to be obsolete,Thresholds deadlocks. I would say this is admin error,inflated severity,Clearly overinflated severity. Centralization risks,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,
Unsatisfactory,validation-343,Inadequate Approval and Disapproval Thresholds for USD Price Proposal,Thresholds deadlocks. I would say this is admin error,,Admin error,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L133C9-L134C46,,,
Unsatisfactory,validation-49,"PriceFeed can continually launch the wrong proposals, preventing correct proposals from being launched",Trusted roles,strictly speaking point 2 in main invariants does not mean price feeds are trusted,Overinflated severity. Assumes malicious price feed,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,,,
Unsatisfactory,validation-85,Denial of Service (DoS) via Repeated Proposals by Malicious or Competing Price Feeds,Trusted roles,,Overinflated severity. Malicious price feed,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L157-L158,,,
Unsatisfactory,validation-357,Centralization Risk in Proposal Voting Threshold Adjustment,Trusted roles,,Overinflated severity. Malicious admin,,,,,,,
Unsatisfactory,findings-47,Permanent DoS due to overflow,Unsafe downcast of blocktimestamp.,inflated severity,Overinflated severity. Issue in 82 years,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L104,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L104,,,
Unsatisfactory,findings-49,Unsafe casting truncates user���s input,Unsafe downcasting of controlled input variable,inflated severity,Invalid. duration < MaxLockDuration,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L257,,,
Unsatisfactory,validation-345,User's locked tokens can't be unlocked due to unsafe casting to uint32 of block.timestamp,Unsafe typecasting is reported by the bot. As well as uint32 may be sufficient for the contract purposes. Will leave as satisfactory,inflated severity,Overinflated severity. Issue in 82 years,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L410,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L410,,,
Unsatisfactory,validation-282,Use call instead of transfer,Use call instead of transfer,OOS,Reported by bot in M-1,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-406,Use call instead of transfer,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-225,Use of payable.transfer() Instead of .call for sending ether,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-66,`call()` should be used instead of `transfer()`,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-522,Use of deprecated `transfer()` in `LockManager.sol::unlock()`,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-206,unlock function should use call() instead of deprecated transfer() on an address payable,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-458,`call()` should be used instead of deprecated `transfer()` on an address payable,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-68,Use of Deprecated `transfer` Method in `unlock` Function Leads to Potential Ether Transfer Failures,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,findings-79,Users may not be able to receive locked ETH,Use call instead of transfer,,Reported by bot M-2,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-527,Locking native tokens using a non-EOA account makes funds unrecoverable,User mistake,,Reported by bot M-2,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L420,,,
Unsatisfactory,validation-425,setLockDuration doesn't have unlockTimeLatest controls,User mistake,inflated severity,Invalid. Unreasonable claims,,,,,,,
Unsatisfactory,validation-614,Token Owner tokens will be lost if the owner uses wrong OnBehalf Address,User mistake,,User error,,,,,,,
Unsatisfactory,validation-394,Misplaced position of the validation of `_lockDuration` in `_lock`.,User mistake,,User can create a lock < minLockDuration when lockdrop is not active,,,"https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351","https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L245-L249,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L349-L351",,,
Unsatisfactory,validation-467,Tokens locked before lockdrop starts will not be rewarded,User mistake,,Remainder is reset if locked outside of lockbox period,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L394,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L394,,,
Unsatisfactory,validation-53,Silent Skip in _lock Function Prevents Reward Distribution But Locks Users Assets.,User mistake,,Invalid. Expected behaviour (users just won't get the boost of minting),,,,,,,
Unsatisfactory,validation-622,No incentive for user to unlock tokens,Users still earns rewards after unlock period without unlocking again,"Intended behavior, user can also harvert rewards directly",Invalid. Users may want to unlock to have possession of their tokens. Also they can harvest() without the need of any additional lock,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,
Unsatisfactory,validation-126,Inaccurate Calculation of Weighted Value When Lock Duration Expires but Tokens Remain Unlocked,Users still earns rewards after unlock period without unlocking again,,Invalid. Point 3 in the graph. Users will still receive rewards,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,
Unsatisfactory,validation-548,Users can gain rewards with zero quantity,Users still earns rewards after unlock period without unlocking again,,Invalid. Harvesting with 0 locked tokens or multiples times on the same block would not lead to more shnibbles,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,
Unsatisfactory,validation-574,Unauthorized  Increase in Schnibbles  via Zero-Quantity Unlock calls.,Users still earns rewards after unlock period without unlocking again,,Invalid. Harvesting with 0 locked tokens or multiples times on the same block would not lead to more shnibbles,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L401C4-L404C11,,,
Unsatisfactory,validation-327,The unlock and the lock private function don't check the result of ERC20 transfer calls,WeirdERC20 (transfers),OOS,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-229,Use of transferFrom Instead of safeTransferFrom,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-86,Unchecked Transfer Vulnerability,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-267,Direct ERC20 operations without safety checks.,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-615,Lack of Safe Transfer in unlock Function,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-601,Use safeTransfer and safeTransferFrom instead of transfer and transferFrom,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-67,Unchecked ERC20 transfers can cause lock up,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-237,unlock function doesn't check the return value of ERC20 transfer(),WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,
Unsatisfactory,validation-375,Use of Unsafe `transferFrom` Method in `_lock` Function Leads to Potential Token Transfer Failures,WeirdERC20 (transfers),,Reported by bot M-4,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,https://github.com/code-423n4/2024-05-munchables/blob/main/src/managers/LockManager.sol#L376,,,